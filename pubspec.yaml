name: app
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.15+15

environment:
  sdk: ^3.8.1

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  sentry_flutter: ^9.7.0
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
  intl: any

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8
  
  # Supabase Flutter integration - upgraded for OAuth flow_state fix
  supabase_flutter: ^2.10.3
  
  # Cached network image voor remote icons
  cached_network_image: ^3.3.1
  flutter_dotenv: ^6.0.0
  sign_in_with_apple: ^7.0.1
  google_sign_in: ^7.2.0
  crypto: ^3.0.6
  flutter_secure_storage: ^9.2.4
  url_launcher: ^6.3.2
  
  # RevenueCat for in-app purchases and subscriptions
  purchases_flutter: ^9.8.0
  provider: ^6.1.5
  package_info_plus: ^9.0.0
  flutter_platform_widgets: ^9.0.0
  image_picker: ^1.1.2
  uuid: ^4.5.1
  connectivity_plus: ^7.0.0
  location: ^8.0.1
  share_plus: ^12.0.0

  # Firebase push notifications
  firebase_messaging: ^16.0.3
  firebase_core: ^4.2.0

dev_dependencies:
  sentry_dart_plugin: ^3.1.1
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^6.0.0
  
  # Native splash screen generator
  flutter_native_splash: ^2.4.1
  
  # App icon generator
  flutter_launcher_icons: ^0.14.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # Enable code generation for internationalization
  generate: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/icons/
    - assets/images/visuals/
    - assets/images/buttons/
    - .env

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # Custom fonts
  fonts:
    - family: Graphie
      fonts:
        - asset: assets/fonts/Graphie.otf
          weight: 400
        - asset: assets/fonts/Graphie_Italic.otf
          weight: 400
          style: italic
        - asset: assets/fonts/Graphie_Thin.otf
          weight: 100
        - asset: assets/fonts/Graphie_Thin_Italic.otf
          weight: 100
          style: italic
        - asset: assets/fonts/Graphie_ExtraLight.otf
          weight: 200
        - asset: assets/fonts/Graphie_ExtraLight_Italic.otf
          weight: 200
          style: italic
        - asset: assets/fonts/Graphie_Light.otf
          weight: 300
        - asset: assets/fonts/Graphie_Light_Italic.otf
          weight: 300
          style: italic
        - asset: assets/fonts/Graphie_Book.otf
          weight: 500
        - asset: assets/fonts/Graphie_Book_Italic.otf
          weight: 500
          style: italic
        - asset: assets/fonts/Graphie_SemiBold.otf
          weight: 600
        - asset: assets/fonts/Graphie_SemiBold_Italic.otf
          weight: 600
          style: italic
        - asset: assets/fonts/Graphie_Bold.otf
          weight: 700
        - asset: assets/fonts/Graphie_Bold_Italic.otf
          weight: 700
          style: italic
        - asset: assets/fonts/Graphie_ExtraBold.otf
          weight: 800
        - asset: assets/fonts/Graphie_ExtraBold_Italic.otf
          weight: 800
          style: italic

# Flutter Native Splash configuration
flutter_native_splash:
  # This package generates native code to customize Flutter's default white native splash screen
  # with background color and splash image.
  # Customize the parameters below, and run the following command in the terminal:
  # flutter pub get
  # flutter pub run flutter_native_splash:create
  
  # background_image: "assets/background.png"
  
  # The image parameter allows you to specify an image used in the splash screen.  It must be a
  # png file and should be sized for 4x pixel density.
  image: assets/images/visuals/splash_logo.png
  
  # The branding property allows you to specify an image used as branding in the splash screen.
  # It must be a png file. It is supported for Android, iOS and the Web.  For Android 12,
  # see the Android 12 section below.
  #branding: assets/dart.png

  # To position the branding image at the bottom of the screen you can use bottom, bottomRight,
  # and bottomLeft. The default values is bottom if not specified or specified something else.
  #branding_mode: bottom

  # The color property allows you to specify a color for the background of your splash screen.
  # The value provided must be a valid RGB hex color.
  color: "#7171FF"  # primair4Lilac - primary color
  
  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing
  # the leading # character.

  # The color_dark property allows you to specify a different color for the background of your
  # splash screen when device is in dark mode. The value provided must be a valid RGB hex color.
  color_dark: "#121212"  # secundair1Deepblack - deep black background

  # The image_dark property allows you to specify a different image for the splash screen when
  # device is in dark mode. Using same white transparent logo for both modes.
  image_dark: assets/images/visuals/splash_logo.png

  # The android, ios and web parameters can be used to disable the splash screen on a per
  # platform basis.  If a parameter is not specified, the platform will be enabled.
  android: true
  ios: true
  web: false

  # Platform specific images can be specified with the following parameters, which will override
  # the respective parameter. You may specify all, selected, or none of these parameters:
  #color_android: "#42a5f5"
  #color_dark_android: "#042a49"
  #color_ios: "#42a5f5"
  #color_dark_ios: "#042a49"
  #image_android: assets/splash-android.png
  #image_dark_android: assets/splash-android-dark.png
  #image_ios: assets/splash-ios.png
  #image_dark_ios: assets/splash-ios-dark.png
  #color_web: "#42a5f5"
  #color_dark_web: "#042a49"
  #image_web: assets/splash-web.png
  #image_dark_web: assets/splash-web-dark.png

  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center, 
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  #android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see 
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill, 
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight, 
  # bottomLeft, or bottomRight.
  #ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  #web_image_mode: center

  # To hide the notification bar, use the fullscreen parameter.  Has no effect in web since web 
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  fullscreen: true
  
  # Additional settings to prevent white screen flashing
  # These help ensure immediate splash screen display
  android_gravity: center
  ios_content_mode: center
  
  # Android 12 splash screen support
  android_12:
    # The image parameter sets the splash screen icon image.  If this parameter is not specified,
    # the app's launcher icon will be used instead.
    # Please note that the splash screen will be clipped to a circle on the center of the screen.
    # App icon with an icon background: This should be 240×240dp with a maximum radius of 108dp.
    # App icon without an icon background: This should be 288×288dp, or 144dp radius.
    image: assets/images/visuals/splash_logo.png
    
    # The image_dark parameter sets the splash screen icon image for dark mode.
    # Using same white transparent logo for both modes.
    image_dark: assets/images/visuals/splash_logo.png
    
    # Splash screen background color.
    color: "#7171FF"  # primair4Lilac - primary color
    
    # Splash screen background color in dark mode.
    color_dark: "#121212"  # secundair1Deepblack - deep black background

  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s) 
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'

# Flutter Launcher Icons configuration
flutter_launcher_icons:
  # This package generates app icons for both Android and iOS platforms.
  # Run the following command in the terminal:
  # flutter pub get
  # flutter pub run flutter_launcher_icons:main
  
  android: true
  ios: true
  
  # The main image path for both platforms
  image_path: "assets/images/visuals/app_icon.png"
  
  # Platform-specific configuration
  android_config:
    generate: true
    image_path: "assets/images/visuals/app_icon.png"
  
  ios_config:
    generate: true
    image_path: "assets/images/visuals/app_icon.png"
    
  # Remove the old Flutter logo
  remove_alpha_ios: true
sentry:
  upload_debug_symbols: true
  upload_source_maps: true
  project: flutter
  org: venyu-pq
